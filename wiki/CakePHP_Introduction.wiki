# Some introduction of cakePHP framework.

= 介绍 =
这是一个关于cakePHP的简单介绍,请不要修改 /cake 目录下的任何文件，这个目录由cakePHP维护。


= 参考资料 =

* 官方doc: http://book.cakephp.org/view/2/x1-2-Collection

= 常量定义位置 =

项目级的常量定义在 app/config/bootstrap.php 中.

= 自动脚手架 =

cake\console\cake.bat  这个批处理文件可以用于根据数据库自动生成MVC的各种文件

使用注意： 

把这个目录加到path中，path=%path%;cake\console\

然后切换到 \app 下执行，这样就可以读到数据库配置文件。


= 得到当前用户Session =

//可以从session中得到当前user的信息;

$var = $this->Auth->user();

//设置给当前用户的提示

$this->Session->setFlash('Good-Bye'); 

//读写session,可以使用"."来访问层次结构 例如：User.username 表示为
 array('User' =>
        array('username' => 'clarkKent@dailyplanet.com')
      );

$this->Session->read();

$this->Session->write();


= 生成唯一的密钥 =
app/config/core.php  line 153
Configure::write('Security.salt', 'aBL7du30mh3dgzfbVfX9fxph49hdSwybO2Cnffde');

修改随机字符串，以获得唯一的加密密钥.

= 展现-业务逻辑分离的编码方式 =

你可能需要一些工具类 从业务逻辑中剥离出来，达到高度复用和缓存性能的作用。

*展现层 
展现层直接输出html标记,比如 时间格式化 日期格式化 转换 公式计算等。

使用 helper，自定义的helper放在 app/views/helpers/ 下，并且在controller中启用.
var $helpers = array('Html', 'Form', '你的helper', ...);

*控制层
对于流程控制相关操作，比如:  权值计算 统计 数据分析算等。

使用components ,和helper类似，不同是components更加单元逻辑的控制和数据操作，不涉及输出html标记.

自定义的component放在 app/controllers/components/
var $components = array('Auth', 'Acl' , '你的components' , ....);

*模型层
除了 helper components 以外，还有 behaviors.
behaviors 是和模型相关的，比如Tree behaviors ,封装了树这种复杂数据模型的CUID操作，

其实这都是对于function的细分，并且在一定基础上做了扩展和状态维护，比较好得利用这些特性会让程序更加可读和可扩展。